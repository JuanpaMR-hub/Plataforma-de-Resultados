# Generated by Django 3.2.5 on 2021-07-29 22:34

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('pages', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Actividadxreim',
            fields=[
                ('id_actividad', models.IntegerField()),
                ('id_reim', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'actividadxreim',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Colegio',
            fields=[
                ('idcolegio', models.IntegerField(db_column='idColegio', primary_key=True, serialize=False)),
                ('nombre_colegio', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'colegio',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Letra',
            fields=[
                ('idletra', models.IntegerField(primary_key=True, serialize=False)),
                ('letra_id', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'letra',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Nivel',
            fields=[
                ('idnivel', models.IntegerField(primary_key=True, serialize=False)),
                ('nombre_nivel', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'nivel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PagesActividad',
            fields=[
                ('id_actividad', models.IntegerField(primary_key=True, serialize=False)),
                ('nombre_actividad', models.CharField(max_length=100)),
                ('grafico', models.CharField(max_length=800)),
            ],
            options={
                'db_table': 'pages_actividad',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pertenece',
            fields=[
                ('fecha', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('usuario_id', models.CharField(max_length=45)),
                ('colegio_id', models.CharField(max_length=45)),
                ('nivel_id', models.CharField(max_length=45)),
                ('letra_id', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'pertenece',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, max_length=45, null=True)),
                ('usuario', models.CharField(blank=True, max_length=45, null=True)),
                ('contrasena', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'usuario',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id_ulearnet', models.IntegerField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.DeleteModel(
            name='Actividad',
        ),
    ]
